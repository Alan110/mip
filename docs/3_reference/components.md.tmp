# 组件开发规范

## 组件类型划分及代码所处目录

1、内置组件(root/buildins/)：
	
	* 定义：MIP为了解决性能、安全性问题必须要使用的组件，包括<mip-img>、<mip-video>、<mip-pixl> 等。

2、扩展组件(root/extensions)：
	
	* 定义：丰富MIP功能，官方提供的通用类组件，例如：<mip-iframe> 以及其他等。

3、个性化组件(root/extensions/personalDirectoryName)：

	* 定义：站点的特别需求组件，例如 图表等组件。

4、广告组件（root/extensions/ads）：

	* 定义：涉及到广告相关的MIP组件。

## 代码目录结构
```
. #根目录
├── src #mip核心代码
│   └── deps #依赖代码库
├── buildins #内置组件
├── extensions #扩展和个性化组件
│   └── olympic #mip奥运项目
├── dist #编译后文件
├── examples #mip组件示例demo
├── less #css代码
│   ├── grid #栅格
│   └── mip-common.less #mip base css
├── docs #说明文档
└── assets #docs依赖文件
```

## 步骤

### 1、 [新建需求ISUUE](http://gitlab.baidu.com/MIP/mipmain/issues)

### 2、 通过MIP开发小组审核，确认组件类型后进入开发阶段

### 3、 若无权限，需申请权限（mailto:lilangbo@baidu.com/shenzhou@baidu.com）

### 4、 clone代码库 git clone ssh://g@gitlab.baidu.com:8022/MIP/mipmain.git

### 5、 环境准备

#### 编译环境

依赖fis3，需要插件`fis3-hook-module`、`fis-parse-less`

```
npm install -g fis3
npm install -g fis3-hook-module
npm install -g fis-parse-less
```

注：公司内网服务器，没有外网权限安装fis3的方法

```
1. 安装nodejs：jumbo安装nodejs（如果不知道，babel.baidu.com搜索一下）
2. npm config set registry http://registry.npm.baidu.com
    文档http://npm.baidu.com/
    如有问题尝试如下备用镜像：
    http://db-bldev.db01.baidu.com:8282/
    文档：http://pip.baidu.com/
```

### 6、根据组件类型到相应js目录下开发源码

内置：buildins

扩展：extensions

个性化：extensions/personalDirectoryName/
    
### 7、需要增加文件

js目录下：
    
    个性化： 
        
        增加 personalDirectoryName.js（注册 后面有示例） 

        组件.js 

    内置、扩展：

        增加 组件.js  

        src/miphtml_base.js inline组件  

        src/mip.js 注册组件

less目录下：
    
    个性化：
        
        personalDirectoryName/组件.less  
           
        personalDirectoryName/personalDirectoryName.less (后面有示例)
    
    内置、扩展：组件.less  mip-common.less(注册)


### 编译

```
# 默认编译：包括压缩、md5等
make

# 开发者模式：包括文件监听
make dev

查看效果：http://127.0.0.1:8056/examples/yourexamplesname.html

# todo 个性化编辑：2016.7.12 ready
```




## personalDirectoryName.js 示例

```
__inline('./miphtml_base.js');

__inline('../extensions/personalDirectoryName/util.js');
__inline('../extensions/personalDirectoryName/mip-link.js');
__inline('../extensions/personalDirectoryName/clipboard.js');

require(['mip'], function () {

    var regME = window.registerMipElement;

    /*
     * 注册mip-link组件
     */
    require(['personalDirectoryName/mip-link'], regME.bind(this, 'mip-link'));

    /*
     * 注册mip-share 组件
     */
    require(['personalDirectoryName/mip-share'], regME.bind(this, 'mip-share'));

    /*
     * 注册mip-recommend 组件
     */
    require(['personalDirectoryName/mip-recommend'], regME.bind(this, 'mip-recommend'));

});
```

## personalDirectoryName.less示例

```
# 引入mip common less
@import '../mip-common.less'; 
# 引入个性化组件的less
@import 'mip-share.less';
@import 'mip-recommend.less';
```

## roadmap

—— 编译支持grunt

—— 做js拆分，支持轻量级js，提供comb